"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RedisClientManager = exports.ValidationManager = exports.JWTManager = exports.AuthManager = exports.mailService = exports.firebaseStorageService = exports.activityService = exports.userService = exports.accountService = void 0;
var Auth_service_1 = __importDefault(require("./Auth.service"));
var redisClient_service_1 = __importDefault(require("./redisClient.service"));
exports.RedisClientManager = redisClient_service_1.default;
var validation_service_1 = __importDefault(require("./validation.service"));
exports.ValidationManager = validation_service_1.default;
var JWT_service_1 = __importDefault(require("./JWT.service"));
var user_service_1 = __importDefault(require("./user.service"));
var serviceGenerator_service_1 = __importDefault(require("./serviceGenerator.service"));
var activity_service_1 = __importDefault(require("./activity.service"));
var firebase_storage_service_1 = __importDefault(require("./firebase.storage.service"));
var email_service_1 = __importDefault(require("./email.service"));
exports.mailService = email_service_1.default;
var models_1 = require("../models");
var firebase_1 = __importDefault(require("../loaders/firebase"));
var firebaseStorageService = (0, firebase_storage_service_1.default)({ firebaseAdmin: firebase_1.default.admin });
exports.firebaseStorageService = firebaseStorageService;
var userService = (0, user_service_1.default)({ User: models_1.User });
exports.userService = userService;
var accountService = (0, serviceGenerator_service_1.default)({ Model: models_1.Account });
exports.accountService = accountService;
var activityService = (0, activity_service_1.default)({ Activity: models_1.Activity });
exports.activityService = activityService;
var JWTManager = (0, JWT_service_1.default)({ redisClientManager: redisClient_service_1.default, userService: userService });
exports.JWTManager = JWTManager;
var AuthManager = (0, Auth_service_1.default)({ JWTManager: JWTManager, userService: userService, mailService: email_service_1.default, accountService: accountService });
exports.AuthManager = AuthManager;
